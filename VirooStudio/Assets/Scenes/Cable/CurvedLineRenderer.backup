using UnityEngine;

[RequireComponent(typeof(LineRenderer))]
public class CurvedLineRenderer : MonoBehaviour
{
    public Transform objectA;
    public Transform objectB;
    public int curveResolution = 20;
    public float curveHeight = 2.0f;
    public TubeRenderer tubeRenderer;

    private LineRenderer lineRenderer;

    void Start()
    {
        lineRenderer = GetComponent<LineRenderer>();
        lineRenderer.positionCount = curveResolution;
        SetLineColors();
    }

    void Update()
    {
        DrawCurve();
    }

    void DrawCurve()
    {
        Vector3 startPoint = objectA.position;
        Vector3 endPoint = objectB.position;

        Vector3 startDirection = objectA.TransformDirection(Vector3.up);
        Vector3 endDirection = objectB.TransformDirection(Vector3.up);

        Vector3 controlPointA = startPoint + startDirection * curveHeight;
        Vector3 controlPointB = endPoint + endDirection * curveHeight;

        Vector3[] positions = new Vector3[curveResolution];
        for (int i = 0; i < curveResolution; i++)
        {
            float t = i / (float)(curveResolution - 1);
            Vector3 point = CalculateBezierPoint(t, startPoint, controlPointA, controlPointB, endPoint);
            positions[i] = point;
            lineRenderer.SetPosition(i, point);
        }
        
        tubeRenderer.SetPositions(positions);
    }

    Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
    {
        float u = 1 - t;
        float tt = t * t;
        float uu = u * u;
        float uuu = uu * u;
        float ttt = tt * t;

        Vector3 p = uuu * p0;
        p += 3 * uu * t * p1;
        p += 3 * u * tt * p2;
        p += ttt * p3;

        return p;
    }

    void SetLineColors()
    {
        Gradient gradient = new Gradient();

        GradientColorKey[] colorKey = new GradientColorKey[4];
        GradientAlphaKey[] alphaKey = new GradientAlphaKey[2];

        colorKey[0].color = Color.black;
        colorKey[0].time = 0.1f;

        Color randomColor = new Color(Random.value, Random.value, Random.value);
        colorKey[1].color = randomColor;
        colorKey[1].time = 0.1f;
        colorKey[2].color = randomColor;
        colorKey[2].time = 0.89f;

        colorKey[3].color = Color.black;
        colorKey[3].time = 0.89f;

        alphaKey[0].alpha = 1.0f;
        alphaKey[0].time = 0.0f;
        alphaKey[1].alpha = 1.0f;
        alphaKey[1].time = 1.0f;

        gradient.SetKeys(colorKey, alphaKey);
        lineRenderer.colorGradient = gradient;
    }
}
